#!/bin/sh

[ -f $HOME/.gitmanrc ] && . $HOME/.gitmanrc

[ -z "$DIR" ] && readonly DIR="$HOME/.gitman"
[ -z "$LIST" ] && readonly LIST=$DIR/list
[ -z "$REPOSITORIES" ] && readonly REPOSITORIES=https://github.com/temeteke

usage() {
	cat <<-EOT
		Usage: $(basename $0) <command> [program]...

		Commands:
		  install
		  update
		  uninstall
		  show
		  help
	EOT
}

[ $# -eq 0 ] && usage && exit 1

mkdir -p $DIR && cd $DIR

command=$1
shift
programs=$*

[ ! -f $LIST ] && touch $LIST

case $command in
	install )
		for program in $programs; do
			count=0

			# check $LIST
			if grep -x $program $LIST > /dev/null; then
				echo "$program is already installed." 1>&2
				continue
			fi

			# install
			for repo in $REPOSITORIES; do
				dir=${program}_$(echo $repo | sed 's|^.*://||' | sed 's|[:/.]|_|g')
				[ -d $dir ] \
					&& cmd="(cd $dir && git pull)" \
					|| cmd="git clone $repo/${program}.git $dir"
				echo "${cmd}"
				eval $cmd || continue
				count=$(expr $count + 1) && (cd $dir && make install) || exit 1
			done

			# add $program to $LIST
			[ $count -gt 0 ] && (echo $program >> $LIST)
		done
		;;
	update )
		[ $# -eq 0 ] && programs=$(cat $LIST)
		for program in $programs; do
			# check $LIST
			if ! grep -x $program $LIST > /dev/null; then
				echo "$program is not installed." 1>&2
				continue
			fi

			# update
			for repo in $REPOSITORIES; do
				dir=${program}_$(echo $repo | sed 's|^.*://||' | sed 's|[:/.]|_|g')
				[ -d $dir ] || continue
				(cd $dir && git pull && make install) || exit 1
			done
		done
		;;
	uninstall )
		for program in $programs; do
			# check $LIST
			if ! grep -x $program $LIST > /dev/null; then
				echo "$program is not installed." 1>&2
				continue
			fi

			# uninstall
			for repo in $REPOSITORIES; do
				dir=${program}_$(echo $repo | sed 's|^.*://||' | sed 's|[:/.]|_|g')
				[ -d $dir ] && (cd $dir && make uninstall || exit 1)
				rm -rf $dir
			done

			# remove $program from list
			sed -i -e '/^'$program'$/d' $LIST
		done
		;;
	show )
		[ -f $LIST ] && cat $LIST
		;;
	help )
		usage && exit 0
		;;
	* )
		usage && exit 1
		;;
esac
