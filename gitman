#!/bin/sh

[ -z "$DIR" ] && readonly DIR="$HOME/.gitman"
[ -z "$LIST" ] && readonly LIST=$DIR/list

IFS="
"

myeval() {
    [ -n "$verbose" ] && echo "$*" >&2
    [ -n "$dryrun" ]  || eval "$*"
}

usage() {
	cat <<-EOT
		usage: $(basename $0) [-nv] <command> <repository> [<args>]

		Commands:
		   add
		   update
		   remove
		   list
		   help
	EOT
}

hash() {
	echo $* | md5sum | awk '{print $1}'
}

is_added_repository() {
	[ -n "$(awk '$1=="'$*'"' list)" ]
}

while getopts "nv" opt; do
    case $opt in
        n) dryrun=1;;
        v) verbose=1;;
    esac
done

shift $(( $OPTIND - 1 ))

command=$1
shift

mkdir -p $DIR && cd $DIR
[ ! -f $LIST ] && touch $LIST

case $command in
	add )
		repository=$1
		shift

		[ $# -eq 0 ] && usage && exit 1
		args=$*

		# check $LIST
		if is_added_repository $repository; then
			echo "$repository is already added." 1>&2
			exit 1
		fi

		# add
		dir=$(hash "$repository")
		[ -d $dir ] \
			&& myeval "(cd $dir && git pull && $args)" \
			|| myeval "git clone ${repository} $dir && (cd $dir && $args)"

		# add $repository to $LIST
		echo "$repository $args" >> $LIST
		;;
	update )
		for line in $(cat $LIST); do
			repository=$(echo $line | awk '{print $1}')
			args=$(echo $line | awk '{print $2}')

			# check $LIST
			if ! is_added_repository $repository; then
				echo "$repository is not added." 1>&2
				exit 1
			fi

			# update
			dir=$(hash "$repository")
			echo "$repository $args"
			myeval "(cd $dir && git pull && $args)" || exit 1
		done
		;;
	remove )
		repository=$1
		shift

		args=$*

		# check $LIST
		if ! is_added_repository $repository; then
			echo "$repository is not added." 1>&2
			exit 1
		fi

		# remove
		dir=$(hash "$repository")
		if [ -n "$args" ]; then
			myeval "(cd $dir && $args) && rm -rf $dir" || exit 1
		else
			myeval "rm -rf $dir" || exit 1
		fi

		# remove $repository from list
		$(awk '$1!="'$repository'" {print $1}' $LIST) > $LIST
		;;
	list )
		[ -f $LIST ] && cat $LIST
		;;
	help )
		usage && exit 0
		;;
	* )
		usage && exit 1
		;;
esac
